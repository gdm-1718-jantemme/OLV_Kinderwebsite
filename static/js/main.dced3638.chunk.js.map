{"version":3,"sources":["fonts/FredokaOne-Regular.ttf","views/HomeView.jsx","views/Consultatie.jsx","views/WatGebeuren.jsx","views/games/Memory.jsx","views/games/Info.jsx","views/games/virus-game/context/index.js","views/games/virus-game/config/gameConfig.js","views/games/virus-game/config/imageConfig.js","views/games/virus-game/components/characters/Player.js","views/games/virus-game/components/characters/Virus.js","views/games/virus-game/components/UI/Intro.jsx","views/games/virus-game/components/UI/PlayPause.jsx","views/games/virus-game/components/UI/Lives.jsx","views/games/virus-game/components/UI/Score.jsx","views/games/virus-game/components/UI/GameOver.jsx","views/games/virus-game/components/UI/index.jsx","views/games/virus-game/views/Game.jsx","views/games/virus-game/helpers/Spawner.js","views/games/virus-game/index.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","HomeView","clouds","ref","useRef","calc","o","useSpring","offset","set","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","useState","pauseAnimation","setPauseAnimation","useEffect","document","body","classList","add","handleScroll","event","posY","current","getBoundingClientRect","top","window","pageYOffset","scrollTop","srcElement","Math","min","console","log","scrollBottom","scrollTo","addEventListener","removeEventListener","attachEvent","handleClick","getElementById","style","transform","setTimeout","className","name","id","href","src","alt","to","activeClass","smooth","onClick","isDynamic","duration","delay","zIndex","options","height","width","isPaused","onLoad","amount","cloudArray","i","cloud","floor","random","length","size","element","img","left","opacity","interpolate","push","generateClouds","Consulatie","WatGebeuren","Memory","state","firstCard","secondCard","sound","goodAnswer","clicks","cards","percentage","firstId","componentDidMount","createGameContainer","cardsArray","count","amountCards","querySelector","innerHTML","div","insertAdjacentHTML","querySelectorAll","forEach","card","randomPos","order","flipCard","setState","level","resetBoard","parent","target","parentNode","checkForMatch","dataset","framework","play","remove","clickPercentage","toFixed","playAgain","dontPlayAgain","changeLevel","editSoundLevel","soundOn","soundOff","this","type","info","Component","Info","showCard","nextCard","previousCard","GameContext","React","createContext","gameConfig","backgroundColor","innerWidth","innerHeight","autoResize","game","hasStarted","playing","gameOver","maxViruses","lives","score","difficulty","easy","initViruses","virusPerLevel","scorePerLevel","spawnInterval","buttonText","normal","hard","startGame","imageConfig","viruses","player","Player","renderer","stage","PIXI","hit","dragging","data","sprite","from","interactive","buttonMode","anchor","x","y","setDraggable","addChild","on","onDragStart","onDragEnd","onDragMove","off","newPos","getLocalPosition","contain","container","collision","Virus","speed","turningSpeed","direction","position","PI","turnAdd","cos","abs","sin","bounds","gameWidth","gameHeight","virusBounds","getBounds","playerBounds","Intro","props","difficultyBtns","Object","keys","PlayPause","Lives","hearts","key","Score","GameOver","UI","uiView","setGameState","virusSpawner","action","timeout","setInterval","clearInterval","Game","gameState","context","updateGameState","newState","spawnVirus","app","resetGameWindow","children","filter","child","cursor","object","removeChild","reset","gameLoop","view","containCharacter","virus","animateVirus","checkPlayerCollision","stop","checkCollision","splice","checkForLevelIncrease","destroy","start","ticker","initGame","updateState","gameCanvas","appendChild","thisDiv","contextType","VirusGame","Provider","value","Boolean","location","hostname","match","ReactDOM","render","basename","process","path","component","exact","Consultatie","GameMemoryView","GameMemoryInfoView","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dced3638.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FredokaOne-Regular.4a2f2ea4.ttf\";","import React, { useEffect, useRef, useState } from 'react';\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\nimport { Spring } from 'react-spring/renderprops';\nimport { animated, useSpring } from 'react-spring';\nimport { Link } from \"react-router-dom\";\nimport Lottie from 'react-lottie';\nimport animationData from './rocketAni_v2.json'\nimport * as Scroll from 'react-scroll';\n\n\nimport '../sass/app.scss';\nimport '../sass/views/_home.scss';\n\nexport default function HomeView() {\n    const clouds = [];\n\tconst ref = useRef();\n\tconst rocketRef = useRef();\n    const calc = (o) => `translateY(${o * 0.05}px)`;\n    const [{ offset }, set] = useSpring(() => ({ offset: 0 }));\n    const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: animationData,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n\t  };\n\t  \n\tconst [pauseAnimation, setPauseAnimation] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetPauseAnimation(true)\n\t\tdocument.body.classList.add(\"no-sroll\")\n\t\treturn\n\t}, [])\n\n    const handleScroll = (event) => {\n\t\tconst posY = ref.current.getBoundingClientRect().top;\t\n        const offset = window.pageYOffset - posY;\n\t\tset({ offset });\n\t\t\n        let scrollTop = event.srcElement.body.scrollTop,\n        itemTranslate = Math.min(0, scrollTop/3 - 60);\n        let devider = 10\n        console.log(posY)\n            //setBottomOffset(posY/devider + 12)\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    });\n\n    function scrollBottom() {\n        window.scrollTo(0, 99999);\n    }\n    if (document.addEventListener) {\n        document.addEventListener('DOMContentLoaded', scrollBottom, false);\n    } else if (window.attachEvent) window.attachEvent('onload', scrollBottom);\n\n    function generateClouds(amount) {\n        const cloudArray = ['wolk_1', 'wolk_2', 'wolk_3'];\n        for (let i = 0; i < amount; i++) {\n            const cloud = Math.floor(Math.random() * (cloudArray.length - 1));\n            const size = Math.random() * 25;\n            const element = (\n                <animated.img\n                    src={`homepage/${cloudArray[cloud]}.svg`}\n                    alt=\"Cloud\"\n                    className=\"cloud\"\n                    style={{\n                        width: `${size}%`,\n                        top: `${Math.random() * 100}%`,\n                        left: `${Math.random() * 100}%`,\n                        opacity: `${size / 20}`,\n                        transform: offset.interpolate(calc),\n                    }}\n                />\n            );\n            clouds.push(element);\n        }\n\t}\n\t\n\tconst handleClick = () => {\n\t\tsetPauseAnimation(false)\n\t\tdocument.getElementById('rocketRef').style.transform = 'translate-x(100)'; \n\t\tsetTimeout(() => {\n\t\t\tsetPauseAnimation(true)\n\t\t}, 5000);\n\t}\n\n\tconst handleClick2 = () => {\n\t\tsetPauseAnimation(false)\n\t\tdocument.getElementById('rocketRef').style.transform = 'rotate(180deg)'; \n\t\tsetTimeout(() => {\n\t\t\tsetPauseAnimation(true)\n\t\t\tdocument.getElementById('rocketRef').style.transform = 'rotate(360deg)'; \n\t\t}, 5000);\n\t}\n\n    return (\n        <div className=\"background\">\n\t\t\t<Scroll.Element name=\"test1\" className=\"element\">\n\t\t\t\t<section className=\"container space\" id=\"planets\">\n\t\t\t\t\t\n\t\t\t\t\t<a href=\"https://www.olvz.be\">\n\t\t\t\t\t\t<img className=\"logo\" src=\"homepage/logolvp.svg\" alt=\"logo\" />\n\t\t\t\t\t</a>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"planet_container\">\n\t\t\t\t\t\t<Link className=\"planet\" to=\"/dagkliniek\">\n\t\t\t\t\t\t\t<h2 className=\"planetsName\">Dagkliniek</h2>\n\t\t\t\t\t\t\t<img src=\"homepage/dagkliniek.svg\" alt=\"dagkliniek\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link className=\"planet\" to=\"/opname\">\n\t\t\t\t\t\t\t<h2 className=\"planetsName\">Opname</h2>\n\t\t\t\t\t\t\t<img src=\"homepage/opname.svg\" alt=\"opname\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link className=\"planet\" to=\"/consultatie\">\n\t\t\t\t\t\t\t<h2 className=\"planetsName\">Consultatie</h2>\n\t\t\t\t\t\t\t<img src=\"homepage/consultatie.svg\" alt=\"consultatie\" />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</Scroll.Element>\n            {/*<img\n                src=\"homepage/raket.svg\"\n                alt=\"Raket\"\n                className=\"rocket\"\n                style={{bottom: bottomOffset + 'vh'}}\n            />*/}\n\t\t\t<Scroll.Link activeClass=\"active\" to=\"test2\" smooth=\"easeInOutQuart\" onClick={handleClick} offset={0} isDynamic={false} duration={4000} delay={0}>\n\t\t\t\t<div style={{zIndex: 4}} onClick={handleClick2} id='rocketRef' className=\"rocket\">\n\t\t\t\t\t<Lottie options={defaultOptions}\n\t\t\t\t\t\theight={400}\n\t\t\t\t\t\twidth={400}\n\t\t\t\t\t\t\n\t\t\t\t\t\tisPaused={pauseAnimation}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Scroll.Link>\n\t\t\t\n\t\t\t<Scroll.Element name=\"test2\" className=\"element\">\n\t\t\t\t<section className=\"container earth\" onLoad={generateClouds(8)}>\n\t\t\t\t\t<div className=\"ground\" />\n\t\t\t\t\t<img className=\"skyline\" src=\"homepage/skyline_1.svg\" alt=\"Skyline\" />\n\t\t\t\t\t<img className=\"hospital\" src=\"homepage/ziekenhuis.svg\" alt=\"Ziekenhuis\" />\n\t\t\t\t\t<a href=\"#planets\" onClick={handleClick}>to infinity</a>\n\t\t\t\t\t<Scroll.Link activeClass=\"active\" to=\"test1\" smooth=\"easeInOutQuart\" onClick={handleClick} offset={0} isDynamic={false} duration={4000} delay={0}>\n\t\t\t\t\t\tTest 2 (delay)\n\t\t\t\t\t</Scroll.Link>\n\t\t\t\t\t<section className=\"clouds\" id=\"cloudContainer\" ref={ref}>\n\t\t\t\t\t\t<animated.img\n\t\t\t\t\t\t\tsrc={'homepage/wolk_3.svg'}\n\t\t\t\t\t\t\talt=\"Cloud\"\n\t\t\t\t\t\t\tclassName=\"cloud\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '11%',\n\t\t\t\t\t\t\t\ttop: '40%',\n\t\t\t\t\t\t\t\tleft: '70%',\n\t\t\t\t\t\t\t\topacity: '0.7',\n\t\t\t\t\t\t\t\ttransform: offset.interpolate(calc),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<animated.img\n\t\t\t\t\t\t\tsrc={'homepage/wolk_1.svg'}\n\t\t\t\t\t\t\talt=\"Cloud\"\n\t\t\t\t\t\t\tclassName=\"cloud\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '30%',\n\t\t\t\t\t\t\t\ttop: '0%',\n\t\t\t\t\t\t\t\tleft: '10%',\n\t\t\t\t\t\t\t\topacity: '1',\n\t\t\t\t\t\t\t\ttransform: offset.interpolate(calc),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<animated.img\n\t\t\t\t\t\t\tsrc={'homepage/wolk_1.svg'}\n\t\t\t\t\t\t\talt=\"Cloud\"\n\t\t\t\t\t\t\tclassName=\"cloud\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '17%',\n\t\t\t\t\t\t\t\ttop: '60%',\n\t\t\t\t\t\t\t\tleft: '30%',\n\t\t\t\t\t\t\t\topacity: '0.8',\n\t\t\t\t\t\t\t\ttransform: offset.interpolate(calc),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<animated.img\n\t\t\t\t\t\t\tsrc={'homepage/wolk_3.svg'}\n\t\t\t\t\t\t\talt=\"Cloud\"\n\t\t\t\t\t\t\tclassName=\"cloud\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '15%',\n\t\t\t\t\t\t\t\ttop: '40%',\n\t\t\t\t\t\t\t\tleft: '0%',\n\t\t\t\t\t\t\t\topacity: '0.5',\n\t\t\t\t\t\t\t\ttransform: offset.interpolate(calc),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<animated.img\n\t\t\t\t\t\t\tsrc={'homepage/wolk_1.svg'}\n\t\t\t\t\t\t\talt=\"Cloud\"\n\t\t\t\t\t\t\tclassName=\"cloud\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '24%',\n\t\t\t\t\t\t\t\ttop: '10%',\n\t\t\t\t\t\t\t\tleft: '60%',\n\t\t\t\t\t\t\t\topacity: '1',\n\t\t\t\t\t\t\t\ttransform: offset.interpolate(calc),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\t\t\t</Scroll.Element>\n        </div>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\nimport { Spring } from 'react-spring/renderprops';\nimport { animated, useSpring } from 'react-spring';\nimport { Link } from \"react-router-dom\";\nimport Lottie from 'react-lottie';\nimport animationData from './loadingAni.json'\nimport * as Scroll from 'react-scroll';\n\n\nimport '../sass/app.scss';\nimport '../sass/views/_consultatie.scss';\n\nexport default function Consulatie() {\n    const defaultOptions = {\n        loop: true,\n        autoplay: true, \n        animationData: animationData,\n        rendererSettings: {\n          preserveAspectRatio: 'xMidYMid slice'\n        }\n\t  };\n\n\n    return(\n        <section className=\"container space\" id=\"planets\">\n            <div className=\"loading\">\n                <div className=\"rocket_ani\">\n                    <Lottie options={defaultOptions}\n                        height={200}\n                        width={200}\n                    />\n                </div>\n            </div>\n            <a href=\"https://www.olvz.be\">\n                <img className=\"logo\" src=\"homepage/logolvp.svg\" alt=\"logo\" />\n            </a>\n\n            <div className=\"navbar\">\n                <Link className=\"back\" to=\"/\"><img src=\"homepage/terug.svg\" alt=\"terug\" /></Link>\n            </div>\n\n            <div className=\"heading_container\">\n                <h1 className=\"planetName\">Consultatie</h1>\n            </div>\n\n            <div className=\"planet_container_C\">\n                <Link className=\"planet_C\" to=\"/dagkliniek\"><img src=\"homepage/dagkliniek.svg\" alt=\"dagkliniek\" /></Link>\n                <Link className=\"planet_C\" to=\"/opname\"><img src=\"homepage/opname.svg\" alt=\"opname\" /></Link>\n            </div>\n\n            <div className=\"container_content\">\n                <div className=\"container_action\">\n                    \n                    <Link className=\"action\" to=\"/consultatie/WatZalErGebeuren\">\n                        <img src=\"homepage/watdoen.svg\" alt=\"watdoen\" />\n                    </Link>\n                    <div className=\"action\">\n                        <img src=\"homepage/spelletjes.svg\" alt=\"spelletjes\" />\n                    </div>\n                    <div className=\"action\">\n                        <img src=\"homepage/personeel.svg\" alt=\"personeel\" />\n                    </div>\n                </div>\n                <img className=\"olivia\" src=\"homepage/oliviaMetRaket.svg\" alt=\"olivia\" />\n                <img className=\"planet_bg\" src=\"homepage/consultatie_bg.svg\" alt=\"planet\" />\n            </div>\n        </section>\n    )\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport * as Scroll from 'react-scroll';\n\n\nimport '../sass/app.scss';\nimport '../sass/views/_watGebeuren.scss';\n\nexport default function WatGebeuren() {\n\n    return(\n        <div>\n            <section className=\"container_WG space\" id=\"planets\">\n                <a href=\"https://www.olvz.be\">\n                    <img className=\"logo\" src=\"homepage/logolvp.svg\" alt=\"logo\" />\n                </a>\n\n                <div className=\"navbar\">\n                    <Link className=\"back\" to=\"/consultatie\"><img src=\"homepage/terug.svg\" alt=\"terug\" /></Link>\n                </div>\n\n                <div className=\"heading_container\">\n                    <h1 className=\"planetName\">Wat zal er gebeuren?</h1>\n                </div>\n\n                <div className=\"planet_container_C\">\n                    <Link className=\"planet_C\" to=\"/dagkliniek\"><img src=\"homepage/dagkliniek.svg\" alt=\"dagkliniek\" /></Link>\n                    <Link className=\"planet_C\" to=\"/opname\"><img src=\"homepage/opname.svg\" alt=\"opname\" /></Link>\n                </div>\n\n                <div className=\"container_content_WG\">\n                    <img className=\"planet_bg\" src=\"homepage/consultatie_bg.svg\" alt=\"planet\" />\n                </div>\n            </section>\n            <section className=\"inside\">\n                <div className=\"inside_container\">\n                    <div>\n                        <h2>Echografie</h2>\n                        <p>Met een echografie kan de dokter jouw organen bekijken. De dokter doet dit door gel op een soort deegrolletje te brengen. Met de gel en het rolletje rolt hij over jouw buik. Dit doet geen pijn, maar kan wel wat kriebelen en koud aanvoelen. Jouw buik wordt goed onderzocht. De dokter ziet dit op een TV- scherm naast hem. Om het scherm goed te kunnen zien, kan het wat donker zijn in de kamer. Op het einde veegt de dokter de gel weg en je buik schoon. De echo is dan afgelopen.</p>\n                    </div>\n                    <div>\n                        <h2>MRI-scan</h2>\n                        <p>Een MRI- scan neemt foto’s van de binnenkant van je lichaam. Een MRI scanner is een grote donut waar je ingeschoven wordt door de dokter. Je gaat liggen op het tafeltje en krijgt een hoofdsteun. Je krijgt ook een hoofdtelefoon want de machine kan lawaai maken. Het is belangrijk om goed stil te liggen, want alleen dan krijgen we mooie foto’s en kunnen we kijken hoe het met jou gaat. Mama of papa wachten naast jou.</p>\n                    </div>\n                    <div>\n                        <h2>EEG</h2>\n                        <p>Door een EEG uit te voeren, kunnen de dokters zien wat er allemaal in je hoofd gebeurt. Zo kunnen ze bijvoorbeeld zien of je epilepsie hebt of niet. Er wordt een gel op je hoofd gesmeerd waarop een speciale muts wordt gezet. Het kan dat er aan jou gevraagd wordt om bepaalde dingen te doen zoals bijvoorbeeld eens je ogen te sluiten en terug te openen. Of bijvoorbeeld naar een scherm te kijken met verschillende patronen. Nadien mag de muts terug weg en kan je je hoofd wat afkuisen. De dokters krijgt nu een papier met veel lijntjes te zien en kan zo bekijken wat er in je hoofd gebeurd is. </p>\n                    </div>\n                    <div>\n                        <h2>CT scan</h2>\n                        <p>Een CT scan dient om foto’s te nemen van de binnenkant van je lichaam om het zo te kunnen onderzoeken. Mama of papa mag bij jou blijven en krijgt een speciale jas aan Je moet op een soort bed gaan liggen dat in een grote machine ligt, deze machine maakt een zoemend geluid. Je moet heel goed stil liggen zo krijg je de mooiste foto’s.</p>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport '../../sass/games/_fonts.scss';\nimport '../../sass/games/_memory.scss';\n\n// MEMORY, BTNS, CARDS VERTICAL ALIGN OP 100VH\nexport class Memory extends Component {\n    \n    state = {\n        firstCard: \"\",\n        secondCard: \"\",\n        sound: true,\n        goodAnswer: 0,\n        clicks: 0,\n        cards: 12,\n        percentage: \"\",\n        firstId: \"\",\n    }\n    \n    componentDidMount = () => {\n        this.createGameContainer()\n    }\n\n    createGameContainer = () => {\n        let cardsArray = ['beer', 'mondmasker', 'olivia', 'spuit', 'stetoscoop', 'thermometer', 'MRI', 'INFUUS', 'OTTOSCOOP']\n        let count = 0;\n        let amountCards = this.state.cards / 2\n        document.querySelector('.memory-game').innerHTML = \"\";\n        for (let i = 0; i < amountCards; i++){\n            const div = `<div id=\"${i+count}\" class=\"memory-card\" data-framework=\"${cardsArray[i]}\"> <img class=\"front-face\" src=\"games/memory/${cardsArray[i]}.svg\" alt=\"${cardsArray[i]}\" /> <div class=\"back-face\"></div> </div>`;\n            document.querySelector('.memory-game').insertAdjacentHTML('afterbegin', div);\n            if (count === 0 && i +1 === amountCards) {\n                count++\n                i = -1;\n            }\n        }\n\n        const cards = document.querySelectorAll('.memory-card');\n        cards.forEach(card => {\n            let randomPos = Math.floor(Math.random() * this.state.cards);\n            card.style.order = randomPos;\n        });\n        cards.forEach(card => card.addEventListener('click', this.flipCard));\n        this.setState({\n            clicks: 0,\n            goodAnswer: 0,\n        })\n\n        let level = this.state.cards;\n        if (level === 6) {\n            cards.forEach(card => card.style.height = 'calc(50% - 10px)')\n            cards.forEach(card => card.style.width = 'calc(33.333% - 10px)')\n        } else if (level === 18) {\n            cards.forEach(card => card.style.height = 'calc(33.333% - 10px)')\n            cards.forEach(card => card.style.width = 'calc(16.666% - 10px)')\n        }\n\n        this.resetBoard();\n    }\n\n    flipCard = (event) => {\n        if (this.state.firstCard === \"\" || this.state.secondCard === \"\") {\n            let parent = event.target.parentNode;\n            parent.classList.add('flip');\n            let id = event.target.id\n            if (this.state.firstCard === \"\") {\n                this.setState({\n                    firstCard: parent,\n                    clicks: this.state.clicks + 1,\n                    firstId: id\n                })\n                this.state.firstCard.removeEventListener('click', this.flipCard)\n            } else if (this.state.firstCard !== \"\" ) {\n                this.setState({\n                    secondCard: parent,\n                    clicks: this.state.clicks +1,\n                })\n                this.state.secondCard.removeEventListener('click', this.flipCard)\n                this.checkForMatch()\n            }\n        }\n    }\n\n    checkForMatch = () => {\n        if (this.state.firstCard.dataset.framework !== this.state.secondCard.dataset.framework) {\n            if (this.state.sound === true) {\n                document.getElementById('sound-wrong').play();\n            }\n            setTimeout(() => {\n                this.state.firstCard.addEventListener('click', this.flipCard)\n                this.state.secondCard.addEventListener('click', this.flipCard)\n\n                this.state.firstCard.classList.remove('flip')\n                this.state.secondCard.classList.remove('flip')\n                this.resetBoard();\n              }, 1500);\n        } else if (this.state.firstCard.dataset.framework === this.state.secondCard.dataset.framework) {\n            if (this.state.sound === true) {\n                document.getElementById('sound-right').play();\n            }\n            this.state.firstCard.removeEventListener('click', this.flipCard)\n            this.state.secondCard.removeEventListener('click', this.flipCard)\n            let goodAnswer = this.state.goodAnswer + 1\n            this.setState({\n                goodAnswer: goodAnswer\n            })\n            if (this.state.goodAnswer < this.state.cards/2) {\n                this.resetBoard();\n            } else if (this.state.goodAnswer === this.state.cards/2) {\n                let clickPercentage = ((this.state.cards / this.state.clicks)*100).toFixed(2)\n                document.getElementById('percentage').innerHTML = 'jouw score: ' + clickPercentage +'%'\n                setTimeout(() => {\n                    document.querySelector('.playAgain-container').classList.remove('hide');\n                }, 1000);\n            }\n        }\n    }\n\n    playAgain = () => {\n        const cards = document.querySelectorAll('.memory-card');\n        cards.forEach(card => card.classList.remove('flip'));\n        this.setState({\n            goodAnswer: 0\n        })\n        document.querySelector('.playAgain-container').classList.add('hide');\n        this.createGameContainer();\n    }\n\n    dontPlayAgain = () => {\n        document.querySelector('.playAgain-container').classList.add('hide');\n        const cards = document.querySelectorAll('.memory-card');\n        cards.forEach(card => card.removeEventListener('click', this.flipCard));\n\n    }\n\n    resetBoard = () => {\n        this.setState({\n            firstCard: \"\",\n            secondCard: \"\"\n        })\n    }\n\n    changeLevel = (event) => {\n        let level = event.target.className\n        if (level === 'makkelijk') {\n            this.setState({\n                cards: 6\n            })\n        } else if (level === 'standaard') {\n            this.setState({\n                cards: 12\n            })\n        } else if (level === 'moeilijk') {\n            this.setState({\n                cards: 18\n            })\n        }\n        setTimeout(() => {\n            this.createGameContainer()\n        }, 1);\n    }\n\n    editSoundLevel = () => {\n        let soundOn = document.getElementById('soundOn')\n        let soundOff = document.getElementById('soundOff')\n        if (this.state.sound === true) {\n            this.setState({\n                sound: false\n            })\n            soundOn.classList.add('hide')\n            soundOff.classList.remove('hide')\n        } else if (this.state.sound === false) {\n            this.setState({\n                sound: true\n            })\n            soundOn.classList.remove('hide')\n            soundOff.classList.add('hide')\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"memory-body-container\">\n                <div className=\"navbar\">\n                    <Link className=\"back\" to=\"/\"><img src=\"homepage/terug.svg\" alt=\"terug\" /></Link>\n                </div>\n\n\n                <div className=\"playAgain-container hide\">\n                    <div>\n                        <h3>Nog eens spelen?</h3>\n                        <button onClick={this.playAgain}>Ja</button>\n                        <button onClick={this.dontPlayAgain}>Nee</button>\n                        <p id=\"percentage\"></p>\n                    </div>\n                </div>\n\n                <audio id=\"sound-right\">\n                    <source src=\"sound/right.mp3\" type=\"audio/ogg\"/>\n                </audio>\n                <audio id=\"sound-wrong\">\n                    <source src=\"sound/wrong.mp3\" type=\"audio/ogg\"/>\n                </audio>\n                \n                <div className=\"icons\">\n                    <a href=\"/game-memory-info\"><img id=\"info-icon\" onClick={this.info} src=\"games/memory/info-icon.svg\" alt=\"info\"/></a>\n                    <img id=\"soundOn\" onClick={this.editSoundLevel} className=\"speaker-icon\" src=\"games/memory/sound_on.svg\" alt=\"sound on\" />\n                    <img id=\"soundOff\" onClick={this.editSoundLevel} className=\"speaker-icon hide\" src=\"games/memory/sound_off.svg\" alt=\"sound off\" />\n                </div>\n                \n                <div className=\"game-container\">\n                    <h1 className=\"heading\">Memory Spel</h1>\n                    <div className=\"lvl-btn-container\">\n                        <button className=\"makkelijk\" onClick={this.changeLevel}>Makkelijk</button>\n                        <button className=\"standaard\" onClick={this.changeLevel}>Normaal</button>\n                        <button className=\"moeilijk\" onClick={this.changeLevel}>Moeilijk</button>\n                    </div>\n\n                    <div className=\"memory-game-container\">\n                        <section className=\"memory-game\"></section>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Memory\n\n// PICK RANDOM CARDS OUT OF ARRAY, PUSH THOSE NAMES IN ARRAY\n// FIRST TIME CHECK IF NAMES AREN'T IN ARRAY, SECOND TIME READ ARRAY ONE BY ONE\n// \n// SLIDE SHOW |-| |-| |-| <- 3 kaartjes, duw op next en tekst veranderd\n// ","import React, { Component } from 'react'\nimport '../../sass/games/_fonts.scss';\nimport '../../sass/games/_memory-info.scss';\nimport { Link } from \"react-router-dom\";\n\n\nexport class Info extends Component {\n   \n\n    state = {\n        i: 0,\n        cards: ['beer', 'mondmasker', 'olivia', 'spuit', 'stetoscoop', 'thermometer', 'MRI', 'INFUUS', 'OTTOSCOOP'],\n\n        length: 0\n    }\n\n\n    componentDidMount = () => {\n        let cardsArray = this.state.cards\n        let length = cardsArray.length\n        this.setState({\n            length: length\n        })\n        this.showCard()\n    }\n\n    showCard = () => {\n        let i = this.state.i\n        let cardsArray = this.state.cards\n        document.getElementById(`card-one`).innerHTML = `<img class=\"card-icon\" src=\"games/memory/${cardsArray[i]}.svg\"/>`\n    }\n\n    nextCard = () => {\n        let i = this.state.i\n        let length = this.state.length\n        console.log(i)\n        if (i< length-1) {\n            this.setState({\n                i: i+1\n            })\n            setTimeout(() => {\n                this.showCard()\n              }, 50);\n        }\n    }\n\n    previousCard = () => {\n        let i = this.state.i\n        if (i>0) {\n            this.setState({\n                i: i-1\n            })\n            setTimeout(() => {\n                this.showCard()\n              }, 50);\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"memory-info-body-container\">\n                <a href=\"game-memory\"><img className=\"memory-icon\" src=\"games/memory/memory-icon.svg\" alt=\"memory-icon\"/></a>\n                <div className=\"navbar\">\n                    <Link className=\"back\" to=\"/game-memory\"><img src=\"homepage/terug.svg\" alt=\"terug\" /></Link>\n                </div>\n                <div>\n                    <div className=\"memory-cards-container\">\n                        <div id=\"card-one\" className=\"cards\"></div>\n                        <div id=\"icons-container\">\n                            <img onClick={this.previousCard} id=\"pijltje-terug\" className=\"pijltje\" src=\"games/memory/pijltje.svg\" alt=\"terug\" />\n                            <img className=\"pijltje middle-icon\" src=\"games/memory/explain-icon.svg\" alt=\"explain\" />\n                            <img  onClick={this.nextCard} id=\"pijltje-volgende\" className=\"pijltje\" src=\"games/memory/pijltje.svg\" alt=\"volgende\"/>\n                        </div>\n                        <div id=\"text-blok\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Quod, porro voluptates? Nobis aspernatur nesciunt distinctio molestiae modi, pariatur est qui!</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Info\n","import React from 'react';\n\n/**\n * Create a new context to store game variables\n */\nconst GameContext = React.createContext({});\n\nexport default GameContext;\n","const gameConfig = {\n  window: {\n    backgroundColor: 0x04162e,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    autoResize: true,\n  },\n  game: {\n    hasStarted: false,\n    playing: false,\n    gameOver: false,\n    maxViruses: 5,\n    lives: 2,\n    score: 0,\n    level: 1,\n    difficulty: {\n      easy: {\n        initViruses: 5,\n        virusPerLevel: 2,\n        scorePerLevel: 10,\n        spawnInterval: 1000,\n        buttonText: 'Makkelijk',\n      },\n      normal: {\n        initViruses: 10,\n        virusPerLevel: 4,\n        scorePerLevel: 10,\n        spawnInterval: 500,\n        buttonText: 'Normaal',\n      },\n      hard: {\n        initViruses: 15,\n        virusPerLevel: 6,\n        scorePerLevel: 10,\n        spawnInterval: 300,\n        buttonText: 'Moeilijk',\n      },\n    },\n    startGame: () => {},\n  },\n};\n\nexport default gameConfig;\n","/**\n * All images used in game context\n * * Please note: All images within PIXI.js have to be .PNG\n */\nconst imageConfig = {\n    viruses: [\n        '/games/virus/virus_monster_1.png',\n        '/games/virus/virus_monster_2.png',\n        '/games/virus/virus_monster_3.png',\n    ],\n    player: '/games/virus/virus.png',\n};\n\nexport default imageConfig;\n","import * as PIXI from 'pixi.js';\nimport { imageConfig } from '../../config';\n\nexport default class Player {\n    constructor(renderer, stage = PIXI.Container) {\n    // Set default values\n        this.hit = 0;\n        this.dragging = false;\n        this.data = null;\n        this.parent = null;\n        this.renderer = renderer;\n\n        // Sprite setup from image\n        const sprite = PIXI.Sprite.from(imageConfig.player);\n        sprite.interactive = true;\n        sprite.buttonMode = true;\n        sprite.anchor.set(0.5);\n\n        sprite.x = renderer.width / 2;\n        sprite.y = renderer.height / 2;\n\n        sprite.width = 64;\n        sprite.height = 64;\n\n        // Add Sprite to stage\n        this.sprite = sprite;\n        this.setDraggable(true);\n        this.stage = stage;\n        stage.addChild(sprite);\n    }\n\n    setDraggable(state) {\n        if (state) {\n            this.sprite\n                .on('pointerdown', this.onDragStart)\n                .on('pointerup', this.onDragEnd)\n                .on('pointerupoutside', this.onDragEnd)\n                .on('pointermove', this.onDragMove);\n        } else {\n            this.sprite\n                .off('pointerdown', this.onDragStart)\n                .off('pointerup', this.onDragEnd)\n                .off('pointerupoutside', this.onDragEnd)\n                .off('pointermove', this.onDragMove);\n        }\n    }\n\n    // Reset position\n    reset() {\n        this.sprite.x = this.renderer.width / 2;\n        this.sprite.y = this.renderer.height / 2;\n    }\n\n    // Enable dragging\n    onDragStart(event) {\n        this.dragging = true;\n        this.data = event.data;\n    }\n\n    // End dragging\n    onDragEnd() {\n        this.dragging = false;\n        this.data = null;\n    }\n\n    // Update position on drag move\n    onDragMove() {\n        if (this.dragging) {\n            const newPos = this.data.getLocalPosition(this.parent);\n            this.x = newPos.x;\n            this.y = newPos.y;\n        }\n    }\n\n    // Contain character within container\n    containCharacter(renderer) {\n        this.contain(this.sprite, {\n            x: 20, y: 20, width: renderer.width + 35, height: renderer.height + 35,\n        });\n    }\n\n    contain(sprite, container) {\n        let collision = null;\n\n        // Left\n        if (sprite.x < container.x) {\n            sprite.x = container.x;\n            collision = 'left';\n        }\n\n        // Top\n        if (sprite.y < container.y) {\n            sprite.y = container.y;\n            collision = 'top';\n        }\n\n        // Right\n        if (sprite.x + sprite.width > container.width) {\n            sprite.x = container.width - sprite.width;\n            collision = 'right';\n        }\n\n        // Bottom\n        if (sprite.y + sprite.height > container.height) {\n            sprite.y = container.height - sprite.height;\n            collision = 'bottom';\n        }\n\n        // Return the `collision` value\n        return collision;\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { imageConfig } from '../../config';\n\n/**\n * Class for virus objects\n */\nexport default class Virus {\n    constructor(renderer, stage = PIXI.Container) {\n    // Set Default values\n        this.speed = 0;\n        this.turningSpeed = 0;\n        this.direction = 0;\n\n        // Setup sprite from image\n        const sprite = PIXI.Sprite.from(imageConfig.viruses[Math.floor(Math.random() * imageConfig.viruses.length)]);\n        // sprite.scale.set(0.03);\n        sprite.width = 56;\n        sprite.height = 56;\n        sprite.anchor.set(0.5);\n\n        sprite.position.x = Math.floor(Math.random() * (renderer.width - 56) + 56);\n        sprite.position.y = 0;\n\n        // Setup direction and speed\n        this.direction = Math.random() * Math.PI * 2;\n        this.turningSpeed = Math.random() - 0.8;\n        this.speed = 2 + Math.random() * 2;\n\n        // Add to stage\n        this.sprite = sprite;\n        this.stage = stage;\n\n        stage.addChild(sprite);\n    }\n\n    animateVirus() {\n        const turnAdd = Math.random() < 0.5 ? 0.1 : -0.1;\n        this.direction += this.turningSpeed * turnAdd;\n        this.sprite.position.x += Math.cos(this.direction) * this.speed;\n        this.sprite.position.y += Math.abs(Math.sin(this.direction)) * this.speed;\n    }\n\n    checkCollision(bounds) {\n        if (this.sprite.position.x <= 0 || this.sprite.position.x >= (bounds.gameWidth - this.sprite.width)) this.direction *= -1;\n        if (this.sprite.position.y <= this.sprite.height * -1 || this.sprite.position.y >= bounds.gameHeight) return true;\n        return false;\n    }\n\n    checkPlayerCollision(player) {\n        const virusBounds = this.sprite.getBounds();\n        const playerBounds = player.sprite.getBounds();\n\n        return virusBounds.x + virusBounds.width >= playerBounds.x\n          && virusBounds.x <= playerBounds.x + playerBounds.width\n          && virusBounds.y + virusBounds.height >= playerBounds.y\n          && virusBounds.y <= playerBounds.y + playerBounds.height;\n    }\n}\n","import React from 'react';\n\nexport default function Intro(props) {\n  const { game: { startGame, difficulty } } = props;\n\n  const difficultyBtns = [];\n\n  for (let i = 0; i < Object.keys(difficulty).length; i += 1) {\n    difficultyBtns.push(<button type=\"button\" className=\"btn\" onClick={() => { startGame(Object.keys(difficulty)[i]); }}>{difficulty[Object.keys(difficulty)[i]].buttonText}</button>);\n  }\n\n  return (\n    <div className=\"game__overlay\">\n      <h1>Het virusspel</h1>\n      <p>Kan jij alle virussen ontwijken?</p>\n      <p>Tip: Sleep het karakter over het scherm met de muis om te spelen</p>\n      <div className=\"btn__container\">\n        {difficultyBtns}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function PlayPause() {\n  return (\n    <>\n      <a href=\"/\" className=\"backButton\">Go Home</a>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Lives(props) {\n  const { lives } = props;\n  const hearts = [];\n\n  for (let i = 0; i <= lives; i += 1) {\n    hearts.push(<span key={i}>*</span>);\n  }\n  return (\n    <p>{hearts}</p>\n  );\n}\n","import React from 'react';\n\nexport default function Score(props) {\n  const { score } = props;\n  return (\n    <p className=\"score\">\n      Score:\n      {' '}\n      {score}\n    </p>\n  );\n}\n","import React from 'react';\n\nexport default function GameOver(props) {\n  const { score } = props;\n  return (\n    <div className=\"game__overlay\">\n      <h1>Geen levens meer!</h1>\n      <p>\n        Je hebt een score van\n        {' '}\n        {score}\n        {' '}\n        punten gehaald!\n      </p>\n      <div className=\"btn__container\">\n        <a href=\"/games/virus\" className=\"btn\">Speel opnieuw</a>\n        <a href=\"/\" className=\"btn\">Ga terug</a>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Intro from './Intro';\nimport PlayPause from './PlayPause';\nimport Lives from './Lives';\nimport Score from './Score';\nimport GameOver from './GameOver';\n\nexport default function UI(props) {\n  const {\n    setGameState, game, game: {\n      lives, score, gameOver, hasStarted,\n    },\n  } = props;\n  let uiView;\n\n  if (gameOver) {\n    uiView = <GameOver score={score} />;\n  } else if (hasStarted) {\n    uiView = (\n      <div className=\"game__ui\">\n        <PlayPause />\n        <div className=\"top-right\">\n          <Lives lives={lives} />\n          <Score score={score} />\n        </div>\n      </div>\n    );\n  } else {\n    uiView = <Intro setGameState={setGameState} game={game} />;\n  }\n\n  return (\n    <>\n      {uiView}\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { gameConfig } from '../config';\nimport { Player, Virus } from '../components';\nimport { Spawner } from '../helpers';\nimport GameContext from '../context';\n\nconst virusSpawner = new Spawner();\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.setGameState = props.setGameState;\n  }\n\n  componentDidMount() {\n    this.gameState = this.context;\n\n    //* Declaration of functions to be used in game context\n    /**\n    * Updates both local gameState and context\n    * * Is a workaround for local state not updating with context\n    * @param {Object} newState new state values for the object\n    */\n    const updateGameState = (newState) => {\n      this.gameState = newState;\n      this.setGameState(newState);\n    };\n\n    /**\n     * Spawns a new virus and adds it to the array of viruses\n     */\n    const spawnVirus = () => {\n      if (this.viruses.length < this.gameState.maxViruses) {\n        this.viruses.push((new Virus(this.app.renderer, this.app.stage)));\n      }\n    };\n\n    /**\n     * Check if the game level has to be increased according to configured variables\n     */\n    const checkForLevelIncrease = () => {\n      const {\n        score, maxViruses, level,\n      } = this.gameState;\n      if (score % this.difficulty.scorePerLevel === 0) {\n        updateGameState({\n          ...this.gameState,\n          score: score + 1,\n          maxViruses: maxViruses + this.difficulty.virusPerLevel,\n          level: level + 1,\n        });\n      }\n    };\n\n    /**\n     * Removes all viruses from the game canvas.\n     */\n    const removeVirusesFromScreen = () => {\n      const objectsToRemove = this.app.stage.children.filter((child) => child.cursor !== 'pointer');\n      objectsToRemove.forEach((object) => {\n        this.app.stage.removeChild(object);\n      });\n      this.viruses = [];\n    };\n\n    /**\n     * Resets the game window. Used to reset viruses after player hit.\n     */\n    const resetGameWindow = () => {\n      updateGameState({\n        ...this.gameState,\n        playing: false,\n      });\n      this.player.setDraggable(false);\n      removeVirusesFromScreen();\n      if (this.gameState.lives === 0) {\n        this.player.reset();\n      }\n    };\n\n    /**\n     * Resumes the game window\n     */\n    const resumeGameWindow = () => {\n      updateGameState({\n        ...this.gameState,\n        playing: true,\n      });\n      this.player.setDraggable(true);\n    };\n\n    /**\n     * Logic that has to be handled during every game loop.\n     */\n    const gameLoop = () => {\n      const { renderer, view: { width: gameWidth, height: gameHeight } } = this.app;\n      this.player.containCharacter(renderer);\n      if (this.gameState.playing) {\n        this.viruses.forEach((virus, i) => {\n          virus.animateVirus();\n          // Check for player collision BEFORE removal\n          if (virus.checkPlayerCollision(this.player)) {\n            resetGameWindow();\n            if (this.gameState.lives > 0) {\n              updateGameState({\n                ...this.gameState,\n                lives: this.gameState.lives - 1,\n              });\n              resumeGameWindow();\n            } else {\n              updateGameState({\n                ...this.gameState,\n                playing: false,\n                gameOver: true,\n              });\n              this.app.stop();\n            }\n          }\n\n          if (virus.checkCollision({ gameWidth, gameHeight })) {\n            this.viruses.splice(i, 1);\n            updateGameState({\n              ...this.gameState,\n              score: this.gameState.score + 1,\n            });\n            checkForLevelIncrease();\n            virus.sprite.destroy();\n          }\n        });\n      }\n    };\n\n    /**\n     * Initialize a new game\n     */\n    const initGame = (difficulty) => {\n      // Reset the full game window before creating a new game\n      this.difficulty = this.gameState.difficulty[difficulty];\n      resetGameWindow();\n      updateGameState(gameConfig.game);\n      this.viruses = [];\n      // Start a new game\n      this.player.setDraggable(true);\n      updateGameState({\n        ...this.gameState,\n        hasStarted: true,\n        playing: true,\n        maxViruses: this.difficulty.initViruses,\n      });\n      virusSpawner.start(spawnVirus, this.difficulty.spawnInterval);\n      this.app.ticker.add(gameLoop);\n    };\n\n    // Global variables for the game\n    updateGameState({\n      ...this.gameState,\n      startGame: (difficulty) => { initGame(difficulty); },\n      updateState: () => { updateGameState(); },\n    });\n    this.app = new PIXI.Application(gameConfig.window);\n    this.gameCanvas.appendChild(this.app.view);\n    this.player = new Player(this.app.renderer, this.app.stage);\n  }\n\n  componentWillUnmount() {\n    this.app.stop();\n  }\n\n  render() {\n    return (\n      <div ref={(thisDiv) => { this.gameCanvas = thisDiv; }} />\n    );\n  }\n}\n\n// Add context type to Game class\nGame.contextType = GameContext;\n","export default class Spawner {\n    constructor() {\n        this.id = null;\n    }\n\n    start(action, timeout) {\n        this.id = setInterval(action, timeout);\n    }\n\n    stop() {\n        clearInterval(this.id);\n    }\n}\n","import React, { useState } from 'react';\nimport GameContext from './context';\nimport { gameConfig } from './config';\nimport Game from './views/Game';\nimport { UI } from './components';\n\n// Import styles\nimport './sass/virusgame.scss';\n\nexport default function VirusGame() {\n  const [gameState, setGameState] = useState(gameConfig.game);\n  return (\n    <div className=\"game__view\">\n      <GameContext.Provider value={gameState}>\n        <UI setGameState={setGameState} game={gameState} />\n        <Game setGameState={setGameState} />\n      </GameContext.Provider>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/FredokaOne-Regular.ttf'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\n\nimport './App.css';\n\nimport HomeView from './views/HomeView';\nimport Consultatie from './views/Consultatie';\nimport WatGebeuren from './views/WatGebeuren';\n\n// GAMES\nimport GameMemoryView from './views/games/Memory';\nimport GameMemoryInfoView from './views/games/Info';\nimport VirusGame from './views/games/virus-game';\n\nexport default function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL || ''}>\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/games/virus\" component={VirusGame} exact />\n        <Route path=\"/consultatie\" component={Consultatie} exact />\n          <Route path=\"/consultatie/WatZalErGebeuren\" component={WatGebeuren} exact />\n        <Route path=\"/dagkliniek\" component={HomeView} exact />\n        <Route path=\"/opname\" component={HomeView} exact />\n        <Route path=\"/game-memory\" component={GameMemoryView} exact />\n        <Route path=\"/game-memory-info\" component={GameMemoryInfoView} exact />\n        <Route path=\"/\" component={HomeView} exact />\n      </Switch>\n    </Router>\n  );\n}\n"],"sourceRoot":""}